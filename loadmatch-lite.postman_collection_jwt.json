{
	"info": {
		"_postman_id": "2edf1121-fac2-49ce-8564-c6144f3e80be",
		"name": "loadmatch-lite",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "32034633"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "Get users data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/api/v1/users"
					},
					"response": []
				},
				{
					"name": "Post user  data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/info",
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "Update user  data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/info?id=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"info"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "Delete user data",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{base_url}}/api/v1/users/1"
					},
					"response": []
				},
				{
					"name": "Get user by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/api/v1/users/1"
					},
					"response": []
				},
				{
					"name": "login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \r\n    \"contact\": \"sagar@example.com\",\r\n    \"password\": \"password123\"\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/users/login"
					},
					"response": []
				}
			]
		},
		{
			"name": "enquires",
			"item": [
				{
					"name": "Get enquires data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/api/v1/enquiries"
					},
					"response": []
				},
				{
					"name": "Post enquire data",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"by_user_id\": 1,\r\n    \"to_user_id\": 2,\r\n    \"for_listing_id\": 1\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/enquiries"
					},
					"response": []
				},
				{
					"name": "update enquire data",
					"request": {
						"method": "PUT",
						"header": [],
						"url": "{{base_url}}/api/v1/enquiries/1"
					},
					"response": []
				},
				{
					"name": "Delete enquire  data",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{base_url}}/api/v1/enquiries/1"
					},
					"response": []
				},
				{
					"name": "Get enquire by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/api/v1/enquiries/5"
					},
					"response": []
				}
			]
		},
		{
			"name": "listings",
			"item": [
				{
					"name": "Get listings data",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/api/v1/listings"
					},
					"response": []
				},
				{
					"name": "Post listing data",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\": \"Porter\",\r\n  \"from_city\": \"City A\",\r\n  \"from_pin\": 12345,\r\n  \"to_city\": \"City B\",\r\n  \"to_pin\": 67890,\r\n  \"image_url_1\": \"https://example.com/image1.jpg\",\r\n  \"image_url_2\": \"https://example.com/image2.jpg\",\r\n  \"created_by\": 1, // ID of the user who created the listing\r\n  \"length\": 10.5,\r\n  \"width\": 5.2,\r\n  \"height\": 3.8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/listings"
					},
					"response": []
				},
				{
					"name": "Update listing data",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"created_at\": \"2024-02-07T11:51:49.695Z\",\r\n    \"updated_at\": \"2024-02-07T11:51:49.695Z\",\r\n    \"listing_id\": 1,\r\n    \"type\": \"Porter\",\r\n    \"from_city\": \"City A\",\r\n    \"from_pin\": 12345,\r\n    \"to_city\": \"City B\",\r\n    \"to_pin\": 123456,\r\n    \"image_url_1\": \"https://example.com/image1.jpg\",\r\n    \"image_url_2\": \"https://example.com/image2.jpg\",\r\n    \"created_by\": 1,\r\n    \"length\": 10.5,\r\n    \"width\": 5.2,\r\n    \"height\": 3.8,\r\n    \"updatedAt\": \"2024-02-07T11:51:49.695Z\",\r\n    \"createdAt\": \"2024-02-07T11:51:49.695Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/listings/1"
					},
					"response": []
				},
				{
					"name": "Delete listing data",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{base_url}}/api/v1/listings/1"
					},
					"response": []
				},
				{
					"name": "Get listing by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/api/v1/listings/2"
					},
					"response": []
				}
			]
		},
		{
			"name": "reviews",
			"item": [
				{
					"name": "Get reviews data",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/api/v1/reviews"
					},
					"response": []
				},
				{
					"name": "Post review data",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user_id\": 1,\r\n  \"listing_id\": 2,\r\n  \"review\": \"This porter company provides excellent service. The truckers were punctual and professional. Will definitely use their services again.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/reviews"
					},
					"response": []
				},
				{
					"name": "Update review data",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \r\n  \"review\": \"This porter company provides excellent service.  Will definitely use their services again.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/api/v1/reviews/3"
					},
					"response": []
				},
				{
					"name": "Delete review  data",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{base_url}}/api/v1/reviews/3"
					},
					"response": []
				},
				{
					"name": "Get reviews by Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/api/v1/reviews/3"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "http://localhost:3003"
		}
	]
}